
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_examples\Pre-Processing\plot_SQI_and_clinical_matching_multiple_patients.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download__examples_Pre-Processing_plot_SQI_and_clinical_matching_multiple_patients.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__examples_Pre-Processing_plot_SQI_and_clinical_matching_multiple_patients.py:


Matching SQI Dataframe Window to Clinical Time of "Event" for Multiple Records [Unfinished]
===========================================================================================
Matching SQI Dataframe Window to Clinical Time of "Event" for Multiple Records

.. GENERATED FROM PYTHON SOURCE LINES 9-10

Importing Libraries

.. GENERATED FROM PYTHON SOURCE LINES 10-18

.. code-block:: default
   :lineno-start: 11


    from datetime import date
    import pandas as pd
    import numpy as np
    from datetime import datetime
    import matplotlib.pyplot as plt
    import os 








.. GENERATED FROM PYTHON SOURCE LINES 19-20

Loading SQI Data and clinical data

.. GENERATED FROM PYTHON SOURCE LINES 20-87

.. code-block:: default
   :lineno-start: 21


    filename_SQIs = r'..\..\..\..\OUCRU\Outputs\Complete_SQIs.csv'
    filename_Clinical = r'..\..\..\..\OUCRU\Clinical\v0.0.10\01nva_data_stacked_corrected.csv'
    study_no_path = r'..\..\..\..\OUCRU\01NVa_Dengue\Adults'
    study_no_list = os.listdir(study_no_path) # Need to take the last 8 characters i.e. study_no_list[i][-8:]

    #reading .csv into dataframes
    Clinical = pd.read_csv(filename_Clinical)
    SQIs = pd.read_csv(filename_SQIs)

    TERMINAL = True

    #Showing Data
    if TERMINAL:
        print("\n Clincial Data:")
        print(Clinical)
        print("\n SQI Data:")
        print(SQIs)

    def match_clinical_to_SQIs(Clinical, SQIs, event, study_no_list):
        SQIs[event]=np.nan #forming an empty column for the event 
        print("\n EVENT: ", event)
        for i in range(len(study_no_list)):
            print("\n STUDY-NO: ", study_no_list[i])
            #finding the rows for which the following logic is satisfied
            event_row = Clinical[(((Clinical.column == event) & (Clinical.result == 'True')) | (Clinical.result == event)) & (Clinical.study_no == study_no_list[i][-8:])]
            #print(event_row.date.index[0])
            for j in range(len(event_row)):
                valid_SQI_rows = SQIs[(SQIs.PPG_w_s <= event_row.date[event_row.date.index[j]]) & (SQIs.PPG_w_f > event_row.date[event_row.date.index[j]]) & (SQIs.study_no == study_no_list[i][-8:])]
                SQIs[event][valid_SQI_rows.index] = True
                print("\n Valid Event SQIs Index:")
                print(valid_SQI_rows.index)
    
        return SQIs

    '''

    We previously had functions that fetched ppg start and 
    calculated relative times but since we included the PPG Start times
    in the SQI file, that is no longer needed.

    '''


    event_lookup = 'event_laboratory'
    SQIs_with_Clinical = match_clinical_to_SQIs(Clinical, SQIs, event_lookup, study_no_list)

    event_lookup = 'event_shock'
    SQIs_with_Clinical = match_clinical_to_SQIs(Clinical, SQIs_with_Clinical, event_lookup, study_no_list)


    if TERMINAL:
        print('\n SQIs with Clinical Event Match:')
        print(SQIs_with_Clinical)


    SQIs_with_Clinical.to_csv(r'..\..\..\..\OUCRU\Outputs\Complete_SQIs_with_Clinical.csv')


    # if TERMINAL:
    #     img = plt.imread(r'..\..\..\..\MISC\SQI_Clinical_Image_example.png')
    #     plt.title('Example a Event Alignment with SQIs in Excel')  
    #     plt.imshow(img)








.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


     Clincial Data:
           Unnamed: 0  study_no                 date        column         result unit result_old  date_old
    0               0  003-1001  2020-06-11 13:30:00  hypertension           True  NaN        NaN       NaN
    1               1  003-1002  2020-06-17 11:10:00  hypertension          False  NaN        NaN       NaN
    2               2  003-1003  2020-06-18 07:30:00  hypertension          False  NaN        NaN       NaN
    3               3  003-1004  2020-06-22 12:45:00  hypertension          False  NaN        NaN       NaN
    4               4  003-1005  2020-07-02 15:11:00  hypertension          False  NaN        NaN       NaN
    ...           ...       ...                  ...           ...            ...  ...        ...       ...
    42060       42060  003-2231  2020-12-05 00:00:00       outcome  Full recovery  NaN        NaN       NaN
    42061       42061  003-2232  2020-12-19 00:00:00       outcome  Full recovery  NaN        NaN       NaN
    42062       42062  003-2233  2021-01-02 00:00:00       outcome  Full recovery  NaN        NaN       NaN
    42063       42063  003-2234  2021-01-08 00:00:00       outcome  Full recovery  NaN        NaN       NaN
    42064       42064  003-2235  2021-01-18 00:00:00       outcome  Full recovery  NaN        NaN       NaN

    [42065 rows x 8 columns]

     SQI Data:
                       timedelta                  PPG_w_s                  PPG_w_f  ...                                      correlogram_1     w  study_no
    0     0 days 00:05:00.010000  2020-06-04 09:10:00.010  2020-06-04 09:10:30.000  ...  [75, 150, 226, 0.9132608947040779, 0.799647163...     0  003-2001
    1     0 days 00:05:30.010000  2020-06-04 09:10:30.010  2020-06-04 09:11:00.000  ...  [74, 148, 222, 0.9164960001123641, 0.827303342...     1  003-2001
    2     0 days 00:06:00.010000  2020-06-04 09:11:00.010  2020-06-04 09:11:30.000  ...  [75, 150, 225, 0.9097936306566979, 0.779681593...     2  003-2001
    3     0 days 00:06:30.010000  2020-06-04 09:11:30.010  2020-06-04 09:12:00.000  ...  [75, 149, 224, 0.9128541336509863, 0.807913379...     3  003-2001
    4     0 days 00:07:00.010000  2020-06-04 09:12:00.010  2020-06-04 09:12:30.000  ...  [74, 149, 223, 0.9123059092032415, 0.791340070...     4  003-2001
    ...                      ...                      ...                      ...  ...                                                ...   ...       ...
    5087  0 days 14:15:30.010000  2020-08-12 14:15:30.010  2020-08-12 14:16:00.000  ...  [6, 11, 18, -0.0019374058650579195, -0.0017696...  1701  003-2012
    5088  0 days 14:16:00.010000  2020-08-12 14:16:00.010  2020-08-12 14:16:30.000  ...  [6, 11, 20, 0.039241068108281145, 0.0041982087...  1702  003-2012
    5089  0 days 14:16:30.010000  2020-08-12 14:16:30.010  2020-08-12 14:17:00.000  ...  [6, 10, 18, -0.02065026993537243, -0.034124123...  1703  003-2012
    5090  0 days 14:17:00.010000  2020-08-12 14:17:00.010  2020-08-12 14:17:30.000  ...  [6, 11, 15, -0.0005607782359069993, -0.0363094...  1704  003-2012
    5091  0 days 14:17:30.010000  2020-08-12 14:17:30.010  2020-08-12 14:17:51.610  ...  [6, 10, 20, 0.014910364149073808, 0.0444651847...  1705  003-2012

    [5092 rows x 25 columns]

     EVENT:  event_laboratory

     STUDY-NO:  01NVa-003-2001
    D:\FILES\Desktop\Dissertation ICL\Git\main\examples\Pre-processing\plot_SQI_and_clinical_matching_multiple_patients.py:49: SettingWithCopyWarning: 
    A value is trying to be set on a copy of a slice from a DataFrame

    See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
      SQIs[event][valid_SQI_rows.index] = True

     Valid Event SQIs Index:
    Int64Index([], dtype='int64')

     Valid Event SQIs Index:
    Int64Index([], dtype='int64')

     Valid Event SQIs Index:
    Int64Index([], dtype='int64')

     STUDY-NO:  01NVa-003-2009

     Valid Event SQIs Index:
    Int64Index([], dtype='int64')

     Valid Event SQIs Index:
    Int64Index([], dtype='int64')

     Valid Event SQIs Index:
    Int64Index([], dtype='int64')

     Valid Event SQIs Index:
    Int64Index([], dtype='int64')

     STUDY-NO:  01NVa-003-2012

     Valid Event SQIs Index:
    Int64Index([], dtype='int64')

     Valid Event SQIs Index:
    Int64Index([], dtype='int64')

     Valid Event SQIs Index:
    Int64Index([3449], dtype='int64')

     Valid Event SQIs Index:
    Int64Index([4519], dtype='int64')

     Valid Event SQIs Index:
    Int64Index([], dtype='int64')

     Valid Event SQIs Index:
    Int64Index([], dtype='int64')

     Valid Event SQIs Index:
    Int64Index([], dtype='int64')

     Valid Event SQIs Index:
    Int64Index([], dtype='int64')

     Valid Event SQIs Index:
    Int64Index([], dtype='int64')

     Valid Event SQIs Index:
    Int64Index([3435], dtype='int64')

     Valid Event SQIs Index:
    Int64Index([3555], dtype='int64')

     Valid Event SQIs Index:
    Int64Index([3795], dtype='int64')

     Valid Event SQIs Index:
    Int64Index([3915], dtype='int64')

     Valid Event SQIs Index:
    Int64Index([4155], dtype='int64')

     EVENT:  event_shock

     STUDY-NO:  01NVa-003-2001

     STUDY-NO:  01NVa-003-2009

     Valid Event SQIs Index:
    Int64Index([], dtype='int64')

     Valid Event SQIs Index:
    Int64Index([], dtype='int64')

     STUDY-NO:  01NVa-003-2012

     Valid Event SQIs Index:
    Int64Index([], dtype='int64')

     Valid Event SQIs Index:
    Int64Index([], dtype='int64')

     Valid Event SQIs Index:
    Int64Index([], dtype='int64')

     SQIs with Clinical Event Match:
                       timedelta                  PPG_w_s                  PPG_w_f    first  ...     w  study_no  event_laboratory  event_shock
    0     0 days 00:05:00.010000  2020-06-04 09:10:00.010  2020-06-04 09:10:30.000    29913  ...     0  003-2001               NaN          NaN
    1     0 days 00:05:30.010000  2020-06-04 09:10:30.010  2020-06-04 09:11:00.000    32913  ...     1  003-2001               NaN          NaN
    2     0 days 00:06:00.010000  2020-06-04 09:11:00.010  2020-06-04 09:11:30.000    35913  ...     2  003-2001               NaN          NaN
    3     0 days 00:06:30.010000  2020-06-04 09:11:30.010  2020-06-04 09:12:00.000    38913  ...     3  003-2001               NaN          NaN
    4     0 days 00:07:00.010000  2020-06-04 09:12:00.010  2020-06-04 09:12:30.000    41913  ...     4  003-2001               NaN          NaN
    ...                      ...                      ...                      ...      ...  ...   ...       ...               ...          ...
    5087  0 days 14:15:30.010000  2020-08-12 14:15:30.010  2020-08-12 14:16:00.000  5132472  ...  1701  003-2012               NaN          NaN
    5088  0 days 14:16:00.010000  2020-08-12 14:16:00.010  2020-08-12 14:16:30.000  5135472  ...  1702  003-2012               NaN          NaN
    5089  0 days 14:16:30.010000  2020-08-12 14:16:30.010  2020-08-12 14:17:00.000  5138472  ...  1703  003-2012               NaN          NaN
    5090  0 days 14:17:00.010000  2020-08-12 14:17:00.010  2020-08-12 14:17:30.000  5141472  ...  1704  003-2012               NaN          NaN
    5091  0 days 14:17:30.010000  2020-08-12 14:17:30.010  2020-08-12 14:17:51.610  5144472  ...  1705  003-2012               NaN          NaN

    [5092 rows x 27 columns]





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.619 seconds)


.. _sphx_glr_download__examples_Pre-Processing_plot_SQI_and_clinical_matching_multiple_patients.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_SQI_and_clinical_matching_multiple_patients.py <plot_SQI_and_clinical_matching_multiple_patients.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_SQI_and_clinical_matching_multiple_patients.ipynb <plot_SQI_and_clinical_matching_multiple_patients.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
